buildscript {
    ext {
        notificare_useHuaweiServices = rootProject.file('./app/agconnect-services.json').exists()
    }

    repositories {
        google()
        jcenter()
        maven { url 'https://developer.huawei.com/repo' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.2'
        classpath 'com.google.gms:google-services:4.3.3'

        if (notificare_useHuaweiServices) {
            classpath 'com.huawei.agconnect:agcp:1.2.1.301'
        }
    }
}

repositories {
    google()
    jcenter()
    maven { url "https://github.com/Notificare/notificare-mvn-repo/raw/master/releases" }
    maven { url "https://maven.notifica.re/releases" }
    maven { url "https://maven.notifica.re/prereleases" }
    maven { url 'https://developer.huawei.com/repo' }
}

dependencies {
    def notificare_version = '2.5.0'

    implementation "re.notifica:notificare-core:$notificare_version"
    implementation "re.notifica:notificare-location:$notificare_version"
    implementation "re.notifica:notificare-beacon:$notificare_version"
    implementation "re.notifica:notificare-scannable:$notificare_version"

    if (notificare_useHuaweiServices) {
        implementation "re.notifica:notificare-core-hms:$notificare_version"
        implementation "re.notifica:notificare-location-hms:$notificare_version"
        implementation "re.notifica:notificare-scannable-hms:$notificare_version"
    }
}

cdvPluginPostBuildExtras.add({
    rootProject.subprojects {
        if (name == "app") {
            if (!plugins.hasPlugin('com.google.gms.google-services')) {
                apply plugin: com.google.gms.googleservices.GoogleServicesPlugin
            }

            if (notificare_useHuaweiServices && !plugins.hasPlugin('com.huawei.agconnect')) {
                apply plugin: com.huawei.agconnect.agcp.AGCPlugin
            }
        }
    }
})
